// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DataUrlType {
  COMPANY
  ESTABLISHMENT
  SIMPLES
  PARTNER
  GENERAL
}

model DataUrl {
  id String @id @default(uuid())

  url  String      @unique
  type DataUrlType

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("dataUrl")
}

model Cnpj {
  baseCnpj String @id
  cnpj     String @unique

  company       CnpjCompany?
  establishment CnpjEstablishment?
  partners      CnpjPartner[]

  @@map("cnpj")
}

model CnpjCompany {
  baseCnpj String @id

  corporateName    String
  legalNature      String
  qualification    String
  capital          String
  size             String
  federativeEntity String?

  cnpj Cnpj @relation(fields: [baseCnpj], references: [baseCnpj], onUpdate: Cascade, onDelete: Cascade)

  @@map("cnpjCompany")
}

model CnpjEstablishment {
  baseCnpj String @id

  corporateName        String
  cadasterStatus       String
  cadasterStatusDate   String
  cadasterStatusReason String

  activityStartAt String

  mainCnae      String
  secondaryCnae String?

  specialStatus     String?
  specialStatusDate String?

  telephone1 String
  telephone2 String?
  fax        String?
  email      String

  adress CnpjEstablishmentAddress?

  cnpj Cnpj @relation(fields: [baseCnpj], references: [baseCnpj], onUpdate: Cascade, onDelete: Cascade)

  @@map("cnpjEstablishment")
}

model CnpjEstablishmentAddress {
  id String @id @default(uuid())

  baseCnpj          String @unique
  cityAbroad        String
  countryCode       String
  streetDescription String
  street            String
  number            String
  complement        String
  district          String
  cep               String
  uf                String
  city              String

  establishment CnpjEstablishment @relation(fields: [baseCnpj], references: [baseCnpj])

  @@map("cnpjEstablishmentAddress")
}

model CnpjPartner {
  id String @id @default(uuid())

  baseCnpj String @unique

  identification     Boolean
  identificationDate String?
  exclusionDate      String?

  meiIdentification     Boolean
  meiIdentificationDate String?
  meiExclusionDate      String?

  cnpj Cnpj @relation(fields: [baseCnpj], references: [baseCnpj], onUpdate: Cascade, onDelete: Cascade)

  @@map("cnpjPartner")
}
